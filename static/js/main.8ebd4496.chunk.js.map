{"version":3,"sources":["App.tsx","index.tsx","assets/logo.svg"],"names":["RadioButton","Radio","Button","RadioGroup","Group","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_sldStyleParser","SldStyleParser","_geoJsonParser","GeoJsonParser","_wfsParser","WfsParser","onLangChange","e","target","value","moment","setState","locale","objectSpread","graphicalEditor","codeEditor","language","compact","GsLocale","en_US","de_DE","es_ES","onRuleRendererChange","ruleRendererType","onCompactSwitchChange","state","style","name","rules","symbolizers","kind","wellKnownName","_this2","_this$state","data","react","locale_provider","className","src","logo","alt","es_form","layout","Item","label","onChange","defaultValue","es_switch","checked","dist","parsers","onStyleRead","onDataRead","onStyleChange","sldRendererProps","wmsBaseUrl","layer","defaultParser","showSaveButton","showCopyButton","React","componentName","ReactDOM","render","react_default","a","createElement","src_App_0","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8ebd4496.chunk.js","sourcesContent":["import * as React from 'react';\n\nimport {\n  Form,\n  LocaleProvider,\n  Radio,\n  Switch\n} from 'antd';\nimport { Locale } from 'antd/lib/locale-provider/index';\nimport * as moment from 'moment';\nimport 'moment/locale/de';\nimport 'moment/locale/es';\n\nimport {\n  Style as GsStyle,\n  StyleParser as GsStyleParser\n} from 'geostyler-style';\n\nimport {\n  Data as GsData\n} from 'geostyler-data';\n\nimport GeoJsonParser from 'geostyler-geojson-parser';\nimport SldStyleParser from 'geostyler-sld-parser';\nimport WfsParser from 'geostyler-wfs-parser';\n\nimport {\n  CodeEditor,\n  DataLoader,\n  locale as GsLocale,\n  Style,\n  StyleLoader\n} from 'geostyler';\n\nimport logo from './assets/logo.svg';\nimport './App.css';\n\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\n\n\n// i18n\nexport interface AppLocale extends Locale {\n  graphicalEditor: string;\n  codeEditor: string;\n  language: string;\n  compact: string;\n}\n\n// default props\ninterface DefaultAppProps {\n  styleParsers: GsStyleParser[];\n}\n\n// non default props\ninterface AppProps extends Partial<DefaultAppProps> {\n}\n\n// state\ninterface AppState {\n  style: GsStyle;\n  data?: GsData;\n  locale: AppLocale;\n  compact: boolean;\n  ruleRendererType?: 'SLD' | 'OpenLayers',\n}\n\nclass App extends React.Component<AppProps, AppState> {\n\n  private _sldStyleParser = new SldStyleParser();\n\n  private _geoJsonParser = new GeoJsonParser();\n\n  private _wfsParser = new WfsParser();\n\n  constructor(props: AppProps) {\n    super(props);\n    this.state = {\n      locale: {\n        graphicalEditor: 'Graphical Editor',\n        codeEditor: 'Code Editor',\n        language: 'Language',\n        compact: 'Compact',\n        ...GsLocale.en_US\n      },\n      compact: true,\n      ruleRendererType: 'SLD',\n      style: {\n        name: 'Demo Style',\n        rules: [{\n          name: 'Rule 1',\n          symbolizers: [{\n            kind: 'Mark',\n            wellKnownName: 'Circle'\n          }]\n        }]\n      }\n    };\n  }\n\n  public static componentName: string = 'App';\n\n  onLangChange = (e: any) => {\n    switch (e.target.value) {\n      case 'en':\n        moment.locale('en');\n        this.setState({\n          locale: {\n            graphicalEditor: 'Graphical Editor',\n            codeEditor: 'Code Editor',\n            language: 'Language',\n            compact: 'Compact',\n            ...GsLocale.en_US\n          }\n        });\n        break;\n      case 'de':\n        moment.locale('de');\n        this.setState({\n          locale: {\n            graphicalEditor: 'Grafischer Editor',\n            codeEditor: 'Code Editor',\n            language: 'Sprache',\n            compact: 'Kompakt',\n            ...GsLocale.de_DE\n          }\n        });\n        break;\n      case 'es':\n        moment.locale('es');\n        this.setState({\n          locale: {\n            graphicalEditor: 'Editor gráfico',\n            codeEditor: 'Editor de código',\n            language: 'Idioma',\n            compact: 'Compacto',\n            ...GsLocale.es_ES\n          }\n        });\n        break;\n      default:\n        moment.locale('en');\n          this.setState({\n            locale: {\n            graphicalEditor: 'Graphical Editor',\n            codeEditor: 'Code Editor',\n            language: 'Language',\n            compact: 'Compact',\n            ...GsLocale.en_US\n          }\n        });\n        break;\n    }\n  }\n\n  onRuleRendererChange = (e: any) => {\n    const ruleRendererType = e.target.value;\n    this.setState({ruleRendererType});\n  }\n\n  onCompactSwitchChange = (compact: boolean) => {\n    this.setState({compact});\n  }\n\n  public render() {\n    const {\n      locale,\n      style,\n      data,\n      compact,\n      ruleRendererType\n    } = this.state;\n    return (\n      <LocaleProvider locale={locale}>\n        <div className=\"app\">\n          <header className=\"gs-header\">\n            <span className=\"logo-title\">\n              <img className=\"logo\" src={logo} alt=\"logo\"/>\n              <span className=\"app-title\">GeoStyler</span>\n            </span>\n          </header>\n          <Form layout=\"inline\" className=\"gs-settings\">\n            <Form.Item label={locale.language}>\n              <RadioGroup\n                className=\"language-select\"\n                onChange={this.onLangChange}\n                defaultValue=\"en\"\n              >\n                <RadioButton value=\"en\">EN</RadioButton>\n                <RadioButton value=\"de\">DE</RadioButton>\n                <RadioButton value=\"es\">ES</RadioButton>\n              </RadioGroup>\n            </Form.Item>\n            <Form.Item label={locale.compact}>\n              <Switch\n                checked={compact}\n                onChange={this.onCompactSwitchChange}\n              />\n            </Form.Item>\n            <Form.Item label=\"Symbolizer Renderer\">\n              <RadioGroup\n                className=\"language-select\"\n                onChange={this.onRuleRendererChange}\n                value={ruleRendererType}\n              >\n                <RadioButton value=\"OpenLayers\">OpenLayers</RadioButton>\n                <RadioButton value=\"SLD\">SLD</RadioButton>\n              </RadioGroup>\n            </Form.Item>\n            <Form.Item>\n              <StyleLoader\n                parsers={[\n                  this._sldStyleParser\n                ]}\n                onStyleRead={(style: GsStyle) => {\n                  this.setState({style});\n                }}\n              />\n            </Form.Item>\n            <Form.Item>\n              <DataLoader\n                parsers={[\n                  this._geoJsonParser,\n                  this._wfsParser\n                ]}\n                onDataRead={(data: GsData) => {\n                  this.setState({data});\n                }}\n              />\n            </Form.Item>\n          </Form>\n          <div className=\"main-content\">\n            <div className=\"gui-wrapper\">\n              <h2>{locale.graphicalEditor}</h2>\n              <Style\n                style={style}\n                data={data}\n                onStyleChange={(style: GsStyle) => {\n                  this.setState({style});\n                }}\n                compact={compact}\n                ruleRendererType={ruleRendererType}\n                sldRendererProps={{\n                  wmsBaseUrl: 'https://ows.terrestris.de/geoserver/wms',\n                  layer: 'terrestris:bundeslaender'\n                }}\n              />\n            </div>\n            <div className=\"editor-wrapper\">\n              <h2>{locale.codeEditor}</h2>\n              <CodeEditor\n                style={style}\n                parsers={[\n                  this._sldStyleParser\n                ]}\n                defaultParser={this._sldStyleParser}\n                onStyleChange={(style: GsStyle) => {\n                  this.setState({style});\n                }}\n                showSaveButton={true}\n                showCopyButton={true}\n              />\n            </div>\n          </div>\n        </div>\n      </LocaleProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.b2b95d68.svg\";"],"sourceRoot":""}